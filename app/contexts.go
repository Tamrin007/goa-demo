// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/Tamrin007/goa-demo/design
// --out=$(GOPATH)/src/github.com/Tamrin007/goa-demo
// --version=v1.1.0-dirty
//
// API "Demo App": Application Contexts
//
// The content of this file is auto-generated, DO NOT MODIFY

package app

import (
	"github.com/goadesign/goa"
	"golang.org/x/net/context"
)

// HelloHelloContext provides the Hello hello action context.
type HelloHelloContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
	Name string
}

// NewHelloHelloContext parses the incoming request URL and body, performs validations and creates the
// context used by the Hello controller hello action.
func NewHelloHelloContext(ctx context.Context, service *goa.Service) (*HelloHelloContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	rctx := HelloHelloContext{Context: ctx, ResponseData: resp, RequestData: req}
	paramName := req.Params["name"]
	if len(paramName) > 0 {
		rawName := paramName[0]
		rctx.Name = rawName
	}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *HelloHelloContext) OK(r *GoaExampleHello) error {
	ctx.ResponseData.Header().Set("Content-Type", "application/vnd.goa.example.hello+json")
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}
